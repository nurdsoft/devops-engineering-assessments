name: "Terraform Workflow with Fixed Directories"

on:
  pull_request_target:
    types:
      - opened
      - synchronize
  workflow_dispatch:

jobs:
  terraform:
    name: "Terraform Validation"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      # 1. Checkout the Repository
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # 2. Set Fixed Directories
      - name: Set Assignment Directories
        id: set-directories
        run: |
          run: |
             # Find assignment directories
             ASSIGNMENT_DIR=$(find assignments/public-cloud/aws -type d -name "*")

             # Check if any directory is found
             if [ -z "$ASSIGNMENT_DIR" ]; then
             echo "No assignment directory found."
             exit 1
             fi

             # Convert found directories to a newline-separated list
             ASSIGNMENT_DIR=$(echo "$ASSIGNMENT_DIR" | tr ' ' '\n')

             # Set the environment variable properly
             echo "ASSIGNMENT_DIR=${ASSIGNMENT_DIR}" >> $GITHUB_ENV
             echo "Assignment directory: $ASSIGNMENT_DIR"

          

      # 3. Process EC2 Instance Directory
      - name: Process EC2 Instance Directory
        run: |
          cd ${{ steps.set-directories.outputs.ec2_instance_dir }}
          terraform init
          terraform validate
          terraform plan

      # 4. Process Site-to-Site VPN Directory
      - name: Process Site-to-Site VPN Directory
        run: |
          cd ${{ steps.set-directories.outputs.site2site_vpn_dir }}
          terraform init
          terraform validate
          terraform plan
      # 1. Checkout the Repository
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      # 2. Set Fixed Directories
      - name: Set Assignment Directories
        id: set-directories
        run: |
          # Fixed paths for ec2-instance and site2site-vpn
          EC2_INSTANCE_DIR="assignments/public-cloud/aws/compute/ec2-instance"
          SITE2SITE_VPN_DIR="assignments/public-cloud/aws/networking/site2site-vpn"

          # Validate if directories exist
          if [ ! -d "$EC2_INSTANCE_DIR" ]; then
            echo "Error: EC2 instance directory not found at $EC2_INSTANCE_DIR"
            exit 1
          fi
          echo "ec2_instance_dir=${EC2_INSTANCE_DIR}" >> $GITHUB_OUTPUT
          echo "EC2 instance directory set to: $EC2_INSTANCE_DIR"

          if [ ! -d "$SITE2SITE_VPN_DIR" ]; then
            echo "Error: Site-to-Site VPN directory not found at $SITE2SITE_VPN_DIR"
            exit 1
          fi
          echo "site2site_vpn_dir=${SITE2SITE_VPN_DIR}" >> $GITHUB_OUTPUT
          echo "Site-to-Site VPN directory set to: $SITE2SITE_VPN_DIR"

      # 3. Process EC2 Instance Directory
      - name: Process EC2 Instance Directory
        run: |
          cd ${{ steps.set-directories.outputs.ec2_instance_dir }}
          terraform init
          terraform validate
          terraform plan

      # 4. Process Site-to-Site VPN Directory
      - name: Process Site-to-Site VPN Directory
        run: |
          cd ${{ steps.set-directories.outputs.site2site_vpn_dir }}
          terraform init
          terraform validate
          terraform plan
