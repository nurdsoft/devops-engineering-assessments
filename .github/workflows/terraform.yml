name: "Terraform"

on:
  pull_request_target:
    types:
      - opened
      - synchronize
  workflow_dispatch:

jobs:
  terraform:
    name: "Terraform Validation"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    steps:
      - name: Checkout Main Repository (Source of Truth)
        uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}

      - name: Install jq (Ensure JSON Formatting)
        run: sudo apt-get install -y jq

      - name: Notify Start of Workflow
        run: bash slack_notify.sh "${{ secrets.SLACK_WEBHOOK_URL }}" "start" "Terraform Workflow" "${{ github.event.pull_request.user.login }}" "${{ github.event.pull_request.number }}"

      - name: Check if PR is from a Fork
        id: check-fork
        run: |
          if [[ "${{ github.event.pull_request.head.repo.full_name }}" == "${{ github.repository }}" ]]; then
            echo "IS_FORK=false" >> $GITHUB_ENV
          else
            echo "IS_FORK=true" >> $GITHUB_ENV
          fi

      - name: Notify PR Fork Check (Only if Forked)
        if: env.IS_FORK == 'true'
        run: bash slack_notify.sh "${{ secrets.SLACK_WEBHOOK_URL }}" "success" "Check if PR is from a Fork" "${{ github.event.pull_request.user.login }}" "${{ github.event.pull_request.number }}"

      - name: Checkout Candidate's PR
        if: env.IS_FORK == 'true'
        uses: actions/checkout@v3
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Determine Assignment Directory
        if: env.IS_FORK == 'true'
        id: assignment-dir
        run: |
          ASSIGNMENT_DIR=$(find assignments/public-cloud/aws -type f -name "*.tf" | xargs -I {} dirname {} | uniq | head -n 1)
          
          if [[ -z "$ASSIGNMENT_DIR" ]]; then
            echo "Error: No directory with Terraform files (*.tf) found in assignments/public-cloud/aws."
            exit 1
          fi

          echo "ASSIGNMENT_DIR=${ASSIGNMENT_DIR}" >> $GITHUB_ENV

      - name: Configure AWS Credentials
        if: env.IS_FORK == 'true'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Workflow
        if: env.IS_FORK == 'true'
        working-directory: ${{ env.ASSIGNMENT_DIR }}
        run: |
          terraform init
          terraform validate
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan || echo "VERIFY_FAILED=true" >> $GITHUB_ENV

      - name: Notify Terraform Execution
        if: always()
        run: bash slack_notify.sh "${{ secrets.SLACK_WEBHOOK_URL }}" "${{ job.status == 'success' && 'success' || 'fail' }}" "Terraform Workflow" "${{ github.event.pull_request.user.login }}" "${{ github.event.pull_request.number }}"

      - name: Notify Workflow Completion
        run: |
          if [[ "$VERIFY_FAILED" == "true" ]]; then
            bash slack_notify.sh "${{ secrets.SLACK_WEBHOOK_URL }}" "fail" "Overall Workflow" "${{ github.event.pull_request.user.login }}" "${{ github.event.pull_request.number }}"
          else
            bash slack_notify.sh "${{ secrets.SLACK_WEBHOOK_URL }}" "success" "Overall Workflow" "${{ github.event.pull_request.user.login }}" "${{ github.event.pull_request.number }}"
          fi